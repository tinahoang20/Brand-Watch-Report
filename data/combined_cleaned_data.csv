brand,post_id,post_date,content,likes,comments,shares,sentiment
Coke,post_1,2024-11-01,"Enjoy the refreshing taste of Coke!",250,18,12,positive
Pepsi,post_2,2024-11-08,"Pepsi brings people together.",300,25,20,positive
Fanta,post_3,2024-11-15,"Fanta is all about fun and fruity flavor.",210,15,10,positive
Coke,post_4,2024-11-22,"Share a Coke with your loved ones.",270,20,15,positive
Pepsi,post_5,2024-11-29,"Pepsi Max - Maximum taste, no sugar.",180,10,8,neutral
Fanta,post_6,2024-12-06,"Orange you glad it's Fanta?",220,12,9,positive
Coke,post_7,2024-12-13,"Celebrate every moment with Coca-Cola.",260,22,14,positive
Pepsi,post_8,2024-12-20,"Pepsi – the choice of a new generation.",310,30,25,positive
Fanta,post_9,2024-12-27,"Sip into something more colorful with Fanta.",230,17,11,positive
Coke,post_10,2025-01-03,"New Coke Zero Sugar - try it now!",200,14,10,neutral
Pepsi,post_11,2025-01-10,"Pepsi and snacks – perfect combo!",290,24,16,positive
Fanta,post_12,2025-01-17,"Fanta’s flavor explosion awaits you.",240,19,13,positive
Coke,post_13,2025-01-24,"Ice-cold Coke on a hot day hits different.",275,21,18,positive
Pepsi,post_14,2025-01-31,"Feel the fizz with Pepsi.",260,18,12,positive
Fanta,post_15,2025-02-07,"Get playful with Fanta.",225,15,9,positive

import pandas as pd
import numpy as np
import re
from datetime import datetime

# Load crawled CSVs
coke = pd.read_csv("data/crawl_coke_data.csv")
pepsi = pd.read_csv("data/crawl_pepsi_data.csv")
fanta = pd.read_csv("data/crawl_fanta_data.csv")

# Combine and format
df = pd.concat([coke, pepsi, fanta], ignore_index=True)
df['post_date'] = pd.to_datetime(df['post_date'], errors='coerce')
df = df.dropna(subset=['post_date', 'content'])
df = df[df['post_date'].between('2024-11-01', '2025-03-31')]

# Word count
df['word_count'] = df['content'].apply(lambda x: len(str(x).split()))

# Hashtag extraction
df['hashtags'] = df['content'].apply(lambda x: re.findall(r"#\\w+", str(x).lower()))

# Posting hour
df['hour'] = df['post_date'].dt.hour

# Post type classification
def classify_post(text):
    text = str(text).lower()
    if any(word in text for word in ['promotion', 'deal', 'giảm', 'discount']):
        return 'Promo'
    elif any(word in text for word in ['contest', 'giveaway', 'event']):
        return 'Event'
    elif any(word in text for word in ['ugc', 'your story', 'khách hàng']):
        return 'UGC'
    else:
        return 'Storytelling'

df['post_type'] = df['content'].apply(classify_post)

# Simulated engagement metrics
np.random.seed(42)
df['likes'] = np.random.randint(100, 500, size=len(df))
df['comments'] = np.random.randint(10, 50, size=len(df))
df['shares'] = np.random.randint(5, 30, size=len(df))
df['engagement'] = df['likes'] + df['comments'] + df['shares']

# Save final combined cleaned dataset
df.to_csv("data/combined_cleaned_data.csv", index=False)
print("✅ combined_cleaned_data.csv saved successfully.")
